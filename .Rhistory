online_authors_df <- data.frame(
id = purrr::map_chr(online_authors, "id"),
name = purrr::map_chr(online_authors, "name"),
stringsAsFactors = FALSE
)
if (!author %in% online_authors_df$name) {
stop(paste(author, "is not an existing user name."))
}
online_authors_df$id[online_authors_df$name == author]
}
.wp_post <- function(post, post_id = NULL,
wordpress_url) {
if (is.null(post_id)) {
api_url <- paste0(wordpress_url, "/wp-json/wp/v2/posts")
} else{
api_url <- paste0(wordpress_url, "/wp-json/wp/v2/posts/", post_id)
}
wp_call_api(
VERB = "POST",
api_url = api_url,
body = post
)
}
.wp_media_post <- function(post, post_folder, post_id,
wordpress_url) {
# delete all existing image media
api_url <- paste0(wordpress_url, "/wp-json/wp/v2/media?parent=", post_id)
media <- wp_call_api(VERB = "GET", api_url = api_url)
if (length(media) > 0) {
media_ids <- purrr::map_chr(media, "id")[purrr::map_chr(media, "media_type") == "image"]
purrr::walk(media_ids, wp_delete_media,
wordpress_url)
}
figs <- dir(file.path(post_folder, "figs"),
full.names = TRUE)
if (length(figs)) {
fig_urls <- purrr::map_chr(
figs, wp_upload_media,
wordpress_url = wordpress_url,
post_id = post_id)
return(tibble::tibble(fig = basename(figs), url = fig_urls))
} else {
return(NULL)
}
}
wp_delete_media <- function(media_id, wordpress_url) {
wp_call_api(VERB = "DELETE", api_url =
paste0(wordpress_url, "/wp-json/wp/v2/media/", media_id, "?force=true"))
}
wp_upload_media <- function(media_path, wordpress_url, post_id) {
image <- httr::upload_file(media_path)
img <- wp_call_api(VERB = "POST",
api_url =
paste0(wordpress_url, "/wp-json/wp/v2/media?post=", post_id),
body = image,
filename = basename(media_path))
return(img$media_details$sizes$full$source_url)
}
meta <- rmarkdown::yaml_front_matter(path)
categories <- wp_handle_categories(meta$categories, wordpress_url)
tags <- wp_handle_tags(meta$tags, wordpress_url)
author <- wp_handle_author(meta$author, wordpress_url)
post_list <- list(date = meta$date, title = meta$title,
slug = meta$slug %||% NULL, comment_status = meta$comment_status %||%
"closed", ping_status = meta$ping_status %||% "closed",
status = "draft", content = body, excerpt = meta$excerpt %||%
NULL, format = "standard", template = meta$template %||%
NULL, categories = categories, tags = tags)
?`%||%`
library(purrr)
post_list <- list(date = meta$date, title = meta$title,
slug = meta$slug %||% NULL, comment_status = meta$comment_status %||%
"closed", ping_status = meta$ping_status %||% "closed",
status = "draft", content = body, excerpt = meta$excerpt %||%
NULL, format = "standard", template = meta$template %||%
NULL, categories = categories, tags = tags)
post_list
if (!is.null(author)) {
post_list$author <- author
}
media <- tibble::tribble(
~ fig, ~ url,
"console.png", "https://henrywang.nl/wp-content/uploads/2020/10/console.png",
"ggplot2themes.png", "https://henrywang.nl/wp-content/uploads/2020/10/ggplot2themes.png",
"google-search-console-data-analysis-r-1.png", "https://henrywang.nl/wp-content/uploads/2020/10/google-search-console-data-analysis-r-1.png"
)
media
post_list %>% listviewer::jsonedit()
post_list$content %>% class()
content <- xml2::read_html(post_list$content)
content
xml2::xml_find_all(content, "//img")
class(content)
install.packages("htmltidy")
library(htmltidy)
xml_tree_view(content)
xml_tree_view(content)
html_tree_view(content)
xml_tree_view(content)
imgs <- xml2::xml_find_all(content, "//img")
imgs
media
seq_along(media)
media
seq_along(media)
length(media)
nrow(NULL)
if (nrow(NULL)) {x <- 1}
if (!is.null(NULL)) {x <- 1}
imgs
this_img <- imgs[xml2::xml_attr(imgs, "src") ==
paste0("figs/", media$fig[1])]
this_img
xml2::xml_attr(this_img, "src") <- media$url[1]
this_img
imgs
xml2::xml_child(content)
content
content
xml_child(content)
xml2::xml_child(content)
post_list$content <- as.character(xml2::xml_child(content))
as.character(xml2::xml_child(content))
post_folder <- "20200625"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
remotes::install_github("maelle/goodpress", ref = "main")
library(goodpress)
post_folder <- "20201025"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
post_folder <- "20200625"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
library(goodpress)
post_folder <- "20201025"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
post_folder <- "20200625"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
library(goodpress)
post_folder <- "20201026"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
library(goodpress)
library(goodpress)
post_folder <- "20201025"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
library(goodpress)
post_folder <- "20201025"
wordpress_url <- "https://henrywang.nl"
library(goodpress)
post_folder <- "20201025"
wordpress_url <- "https://henrywang.nl"
library(goodpress)
post_folder <- "20201025"
wordpress_url <- "https://henrywang.nl"
library(goodpress)
post_folder <- "20201025"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
library(goodpress)
post_folder <- "20201025"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
wp_post(post_folder, wordpress_url)
library(goodpress)
post_folder <- "20201026"
wordpress_url <- "https://henrywang.nl"
library(goodpress)
post_folder <- "20201026"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
wp_post(post_folder, wordpress_url)
install.packages("blogdown")
install.packages("blogdown")
library(blogdown)
blogdown:::update_meta_addin()
blogdown:::insert_image_addin()
blogdown:::update_meta_addin()
blogdown:::new_post_addin()
library(goodpress)
read_more()
library(goodpress)
read_more()
library(goodpress)
read_more()
library(goodpress)
read_more()
read_more()
library(goodpress)
read_more()
library(goodpress)
read_more()
install.packages("vembedr")
library(vembedr)
library(goodpress)
post_folder <- "test"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
embed_url("https://www.youtube.com/watch?v=_fZQQ7o16yQ") %>%
use_start_time("1m32") %>%
use_align("center")
wp_post(post_folder, wordpress_url)
library(goodpress)
post_folder <- "20201107"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
path <- file.path(post_folder, "index.md")
meta <- rmarkdown::yaml_front_matter(path)
meta
format(Sys.time(), '%Y-%m-%dT%H:%M:%S')
withr::with_dir(post_folder, rmarkdown::pandoc_convert("index.md",
to = "html", output = html_path, wd = getwd(), options = "--mathjax"))
html_path <- tempfile(fileext = ".html")
file.create(html_path)
withr::with_dir(post_folder, rmarkdown::pandoc_convert("index.md",
to = "html", output = html_path, wd = getwd(), options = "--mathjax"))
meta <- rmarkdown::yaml_front_matter(path)
meta
meta <- rmarkdown::yaml_front_matter(path)
meta
meta <- rmarkdown::yaml_front_matter(path)
meta
meta <- rmarkdown::yaml_front_matter(path)
meta
html_path
?hugodown::md_document()
format(Sys.time(), '%Y-%m-%dT%H:%M:%S')
gsub(' ', '-', tolower("Hello World"))
rmarkdown::metadata
library(goodpress)
post_folder <- "20201107"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
wp_post(post_folder, wordpress_url)
---
params:
post_title: "Hello World"
title: "`r params$post_title`"
date: "`r format(Sys.time(), '%Y-%m-%dT%H:%M:%S')`"
output: hugodown::md_document
slug: "`r gsub(' ', '-', tolower(params$post_title))`"
status: "trash"
categories: Marketing Analytics
tags:
- HubSpot Contact Properties
- HubSpot Contact Properties List
- HubSpot Contact Properties API
---
wp_post(post_folder, wordpress_url)
load("contact_properties_lookup.rda")
knitr::kable(contact_properties_lookup %>% select(name, label, description))
library(dplyr)
knitr::kable(contact_properties_lookup %>% select(name, label, description))
knitr::kable(contact_properties_lookup %>% select(name, label, description))
library(goodpress)
post_folder <- "20201107"
wordpress_url <- "https://henrywang.nl"
wp_post(post_folder, wordpress_url)
wp_post(post_folder, wordpress_url)
wp_post(post_folder, wordpress_url)
library("reactable")
install.packages("reactable")
library(reactable)
# publish
wp_post(post_folder, wordpress_url)
# publish
wp_post(post_folder, wordpress_url)
reactable(contact_properties_lookup %>% select(name, label, description),
searchable = TRUE)
install.packages("DT")
library(DT)
datatable(contact_properties_lookup %>% select(name, label, description))
knitr::kable(contact_properties_lookup[c("name", "label", "description")])
# publish
wp_post(post_folder, wordpress_url)
?gsub
View(contact_properties_lookup)
install.packages("kableExtra")
library(kableExtra)
kable(contact_properties_lookup[c("name", "label", "description")])
contact_properties_lookup[c("name", "label", "description")]
dt <- contact_properties_lookup[c("name", "label", "description")]
kable(dt)
kable(dt) %>%
kable_styling(full_width = F)
kable(dt) %>%
column_spec(1, "10em") %>%
column_spec(2, "10em")
kable(dt) %>%
column_spec(1, width = "10em") %>%
column_spec(2, width = "10em")
kable(dt) %>%
column_spec(1, width = "10em")
library(magrittr)
kable(dt) %>%
column_spec(1, width = "10em") %>%
column_spec(2, width = "10em")
library(kableExtra)
kable(dt) %>%
column_spec(1, width = "10em") %>%
column_spec(2, width = "10em")
load("contact_properties_lookup.rda")
dt <- contact_properties_lookup[c("name", "label", "description")]
kable(dt) %>%
column_spec(1, width = "10em") %>%
column_spec(2, width = "10em")
kable(dt)
Sys.getenv('R_USER')
here::here()
usethis::edit_r_environ()
Sys.getenv('R_USER')
here::here()
Sys.getenv("R_USER")
install.packages("flextable")
mtcars
library(flextable)
load("contact_properties_lookup.rda")
flextable(contact_properties_lookup,
col_keys = c("name", "label", "description"))
library(magrittr)
flextable(contact_properties_lookup,
col_keys = c("name", "label", "description")) %>%
autofit()
flextable(contact_properties_lookup,
col_keys = c("name", "label", "description"))
flextable(contact_properties_lookup,
col_keys = c("name", "label", "description")) %>%
set_table_properties(layout = "autofit")
ft <- qflextable(contact_properties_lookup[c("name", "label", "description")])
set_table_properties(ft, layout = "autofit")
class(ft)
ft %>% regulartable() %>% autofit()
class(ft)
ft <- contact_properties_lookup[c("name", "label", "description")]
class(ft)
ft %>% regulartable() %>% autofit()
install.packages("pandoc")
rmarkdown::find_pandoc()
usethis::edit_file()
usethis::edit_r_environ()
?Startup
library(rmarkdown)
pandoc_version()
pandoc_available()
load("contact_properties_lookup.rda")
dt <- contact_properties_lookup[c("name", "label", "description")]
knitr::kable(dt)
# publish
wp_post(post_folder, wordpress_url)
library(goodpress)
# setup
post_folder <- "20201107"
wordpress_url <- "https://henrywang.nl"
# publish
wp_post(post_folder, wordpress_url)
?goodpress::set_hooks
load_all()
library(httr)
?VERB
?methods::is
library(goodpress)
# setup
post_folder <- "20200625"
wordpress_url <- "https://henrywang.nl"
# publish
wp_post(post_folder, wordpress_url)
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
library(goodpress)
# setup
post_folder <- "test"
wordpress_url <- "https://henrywang.nl"
# publish
wp_post(post_folder, wordpress_url)
library(goodpress)
# setup
post_folder <- "test"
wordpress_url <- "https://henrywang.nl"
# publish
wp_post(post_folder, wordpress_url)
# publish
wp_post(post_folder, wordpress_url)
# publish
wp_post(post_folder, wordpress_url)
library(goodpress)
# setup
post_folder <- "test"
wordpress_url <- "https://henrywang.nl"
# publish
wp_post(post_folder, wordpress_url)
# setup
post_folder <- "test"
wordpress_url <- "https://henrywang.nl"
# publish
wp_post(post_folder, wordpress_url)
library(goodpress)
wp_categories()
wp_categories(wordpress_url = "https://henrywang.nl")
library(goodpress)
# setup
post_folder <- "20201123"
wordpress_url <- "https://henrywang.nl"
# publish
wp_post(post_folder, wordpress_url)
# publish
wp_post(post_folder, wordpress_url)
# publish
wp_post(post_folder, wordpress_url)
# publish
wp_post(post_folder, wordpress_url)
# publish
wp_post(post_folder, wordpress_url)
edit_r_profile()
here()
available::available("rhubspot")
available::available("rleadfeeder")
here::here()
create_package("/Users/henry/R/RLeadfeeder")
gh_repos %>%
map(~map_chr(.x, "full_name")) %>%
flatten_chr()
library(goodpress)
# setup
post_folder <- "20210120"
wordpress_url <- "https://henrywang.nl"
# publish
wp_post(post_folder, wordpress_url)
# setup
post_folder <- "20210120"
wordpress_url <- "https://henrywang.nl"
# publish
wp_post(post_folder, wordpress_url)
# setup
post_folder <- "20210120"
wordpress_url <- "https://henrywang.nl"
# publish
wp_post(post_folder, wordpress_url)
# publish
wp_post(post_folder, wordpress_url)
# publish
wp_post(post_folder, wordpress_url)
# publish
wp_post(post_folder, wordpress_url)
library(goodpress)
# setup
post_folder <- "20210427"
wordpress_url <- "https://henrywang.nl"
# publish
wp_post(post_folder, wordpress_url)
pressure
library(plotly)
library(plotly)
library(ggplot2)
library(plotly)
library(ggplot2)
ggplot(pressure, aes(temperature, pressure)) +
geom_line()
gg <- ggplot(pressure, aes(temperature, pressure)) +
geom_line()
ggplotly(gg)
# publish
wp_post(post_folder, wordpress_url)
plotly <- ggplotly(gg)
frameWidget(plotly)
plotly <- ggplotly(gg)
frameWidget(plotly)
install.packages('widgetframe')
library(widgetframe)
frameWidget(plotly)
library(plotly)
library(ggplot2)
library(widgetframe)
gg <- ggplot(pressure, aes(temperature, pressure)) +
geom_line()
plotly <- ggplotly(gg)
frameWidget(plotly)
library(leaflet)
install.packages("leaflet")
library(leaflet)
library(widgetframe)
l % addTiles() %>% setView(0,0,1)
library(leaflet)
library(dplyr)
library(widgetframe)
l % addTiles() %>% setView(0,0,1)
library(leaflet)
library(dplyr)
library(widgetframe)
l <- leaflet() %>% addTiles()
l % addTiles() %>% setView(0,0,1)
library(leaflet)
library(dplyr)
library(widgetframe)
l <- leaflet() %>% addTiles()
l <- l % addTiles() %>% setView(0,0,1)
library(leaflet)
library(dplyr)
library(widgetframe)
l <- leaflet() %>% addTiles()
l %>% addTiles() %>% setView(0,0,1)
frameWidget(l)
library(plotly)
library(ggplot2)
library(widgetframe)
gg <- ggplot(pressure, aes(temperature, pressure)) +
geom_line()
plotly <- ggplotly(gg)
htmlwidgets::saveWidget(frameableWidget(plotly),'gg.html')
